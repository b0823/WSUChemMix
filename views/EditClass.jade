
extends layout


block content
	script(type='text/javascript').
		var updateClass = function(){
			var mins = document.getElementsByClassName("inParamMin");
			var maxes = document.getElementsByClassName("inParamMax");
			var unitsList = document.getElementsByClassName("inParamsUnit");

			var inParams = [];
			for (var i = 0; i < mins.length; i++) {
				if(mins[i].value == "" || !isNumeric(mins[i].value)){alert("Missing/Invalid Data"); return;}
				
				inParams.push({name:mins[i].id,units:unitsList[i].textContent.replace("(","").replace(")",""), 
					range:[parseFloat(mins[i].value),parseFloat(maxes[i].value)]})

			};
			
			var funcParams = document.getElementsByClassName("funcParam");
			var mathParams = [];

			for (var i = 0; i < funcParams.length; i++) {
				var element = funcParams[i];
				if(element.type=="radio"){
					if(element.checked){
						mathParams.push({name:element.id, value: JSON.parse(element.nextSibling.textContent.toLowerCase()) })
					}
				}
				else{
					if(element.value == "" || !isNumeric(element.value)){alert("Missing/Invalid Data"); return;}
					mathParams.push({name:element.id, value:parseFloat(element.value)})
				}
			};

			var studList = [];
			var listElements = document.getElementsByClassName("list-group-item");
			if(listElements.length == 0){
				alert("Invalid/Incomplete Data")
				return;
			}
			for (var i = 0; i < listElements.length; i++) {
				var element = listElements[i];
				studList.push({studentID:element.text,budgetLeft:parseInt(element.id)})
			};

			// console.log(mathParams)			
			var locSplit =  location.href.split("/").reverse();

			post("/EditClass/" + locSplit[0], {inputParams:JSON.stringify(inParams), students: JSON.stringify(studList), params: JSON.stringify(mathParams)})
		}
		var add = function(num){
			var lst = [];
			var current = [];
			toConvert = $(".list-group-item")

			for (var i = 0; i < toConvert.length; i++) {
				current.push(toConvert[i].text)
			};


			while(lst.length < num){
				var gen = generateRandomString(10);
				if(lst.indexOf(gen)>-1){}
				else if(current.indexOf(gen)>-1){}
				else lst.push(gen);
			}


			for (var i = 0; i < lst.length; i++) {
				addTo(lst[i])
			};
		}
		var delSelected = function(){
			$(".active").remove();
		}	
		var addTo = function(str){
			$("#classList").append('<a href="#" id="' + document.getElementById("Budget").textContent.split(":")[1] +  '"class="list-group-item">'+ str +' </a>');
		}
		var generateRandomString = function(len){
			return randomString(len, '0123456789abcdefghijklmnopqrstuvwxyz');
		}
		function isNumeric(n) {
		  return !isNaN(parseFloat(n)) && isFinite(n);
		}

		function randomString(length, chars) {
			var result = '';
			for (var i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];
			return result;
		}
		function post(path, params, method) {
			method = method || "post"; // Set method to post by default if not specified.

			// The rest of this code assumes you are not using a library.
			// It can be made less wordy if you use one.
			var form = document.createElement("form");
			form.setAttribute("method", method);
			form.setAttribute("action", path);

			for(var key in params) {
				if(params.hasOwnProperty(key)) {
					var hiddenField = document.createElement("input");
					hiddenField.setAttribute("type", "hidden");
					hiddenField.setAttribute("name", key);
					hiddenField.setAttribute("value", params[key]);

					form.appendChild(hiddenField);
				 }
			}

			document.body.appendChild(form);
			form.submit();
		}
	div(class='container')
		div(class='jumbotron')
			center
				h1= title
			div(class='row')
				div(class='col-sm-4')
					h3= "Class ID : " + classID
					h3(id="Budget")= "Budget : " + budget
					br
					br
					h3
						button#btnSubmit(type="Update",value='Insert',onclick="updateClass();") Update
				div(class='col-sm-4')
					h2= "Input Parameters"
						each inp, i in inputParams						
							h3= inp.name
							h5(class="inParamsUnit")="(" + inp.units  + ")"
							h5="Min"
							input(type='text', class="inParamMin", id=inp.name , name=inp.name, value=inp.range[0])
							h5="Max"
							input(type='text', class="inParamMax", id=inp.name , name=inp.name, value=inp.range[1])
					div(id="lst")
						h2= "Function Parameters"
						each cls, i in params						
							h3= cls.name
							- if (typeof(cls.value) == 'boolean'){
							- if (cls.value){
							input(type='radio',class="funcParam", id=cls.name, name=cls.name+'optradio', checked=false)
							| True
							input(type='radio', class="funcParam", id=cls.name, name=cls.name+'optradio', checked=true)
							| False
							-}
							- else {
							input(type='radio', class="funcParam", id=cls.name, name=cls.name+'optradio', checked=true)
							| True
							input(type='radio', class="funcParam", id=cls.name, name=cls.name+'optradio', checked=false)
							| False
							-}
							-}
							-else {
							input(type='text', id=cls.name, class="funcParam", name=cls.name, value=cls.value)
							-}

				div(class='col-sm-4')
					h2
						|Students
					br
				
					div(class="col-xs-9 list-group" id="classList")
						each cls, i in students						
							a(href="#" class="list-group-item", "id"=cls.budgetLeft)= cls.studentID

					button#btnSubmit(type="CreateBoard",value='Insert',onclick="add(5);") Add 5 Students
					button#btnSubmit(type="CreateBoard",value='Insert',onclick="add(1);") Add 1 Student
					button#btnSubmit(type="CreateBoard",value='Insert',onclick="delSelected();") Delete